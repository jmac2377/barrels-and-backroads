.hero {
  position: relative;
  border-bottom: 1px solid #222;
  overflow: hidden;

  /* Desktop/tablet baseline */
  min-height: 80vh;
}

/* Prefer dynamic viewport height on Android/modern browsers */
@supports (min-height: 100dvh) {
  .hero { min-height: 80dvh; }
}

/* Secondary fallback for other engines */
@supports (min-height: 100svh) {
  .hero { min-height: 80lvh; }
}

.heroImage {
  object-fit: cover;
  object-position: center;
  width: 100%;
  height: 100%;
  position: absolute;
  inset: 0;
  filter: brightness(1.7);
}

/* On portrait viewports, fit the entire image */
@media (orientation: portrait) {
  .heroImage {
    object-fit: contain;
    background-color: #000; /* black bars fill if aspect doesnâ€™t match */
  }
}

.heroOverlay {
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.35);
  pointer-events: none;
}

.heroContent {
  position: relative;
  z-index: 1;
  display: grid;
  place-items: center;
  text-align: center;
  color: #fff;
  padding: 1rem;
  min-height: inherit;
}

.heroContent h1 { font-size: 3rem; margin: 0; }
.heroContent p  { font-size: 1.25rem; }

/* ===== CSS-only first paint swap ===== */
.cssPortrait { display: none; }
.cssLandscape { display: block; }

/* Show portrait image when viewport is tall OR device reports portrait */
@media (orientation: portrait), (max-aspect-ratio: 1/1) {
  .cssPortrait { display: block; }
  .cssLandscape { display: none; }
}

/* Mobile portrait guarantee */
@media (max-width: 768px) {
  .hero { min-height: 70vh; }
  @supports (min-height: 100dvh) {
    .hero { min-height: 100dvh; }
  }
  @supports not (min-height: 100dvh) and (min-height: 100svh) {
    .hero { min-height: 100svh; }
  }
  .heroContent h1 { font-size: 2rem; }
  .heroContent p  { font-size: 1rem; }
}

/* Safety net: never collapse */
.hero::after {
  content: "";
  display: block;
  min-height: 1px;
}
